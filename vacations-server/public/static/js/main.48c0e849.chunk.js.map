{"version":3,"sources":["redux/action-type.ts","reportWebVitals.ts","models/Vacation.ts","redux/store.ts","redux/reducer.ts","redux/app-state.ts","resources/observacation.png","components/header/header.tsx","models/UserLoginDetails.ts","components/login/login.tsx","components/generic-alert/generic-alert.tsx","components/vacation-card/vacation-card.tsx","components/customer/customer.tsx","models/User.ts","components/register/register.tsx","resources/bar-chart.svg","resources/add.svg","components/admin/admin.tsx","resources/beach.svg","components/vacations-reports/vacations-reports.tsx","components/manage-vacation.tsx/manage-vacation.tsx","components/layout/layout.tsx","index.tsx"],"names":["ActionType","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Vacation","id","destination","description","imageUrl","startDate","endDate","price","numOfFollowers","isFollowing","store","createStore","oldAppState","action","newAppState","type","Login","isLoggedIn","userName","payload","Logout","GetAllVacations","UpdateVacations","vacations","ManageVacation","vacationDetails","DeleteVacation","filter","vacation","AddVacation","push","EditVacation","vacationToEdit","forEach","index","splice","SetSocket","socket","Date","Header","props","unsubscribeStore","onLogout","getState","disconnect","sessionStorage","clear","dispatch","state","subscribe","setState","this","className","getItem","to","onClick","src","logo","alt","Component","UserLoginDetails","password","setUserName","event","target","value","setPassword","login","a","preventDefault","userLoginDetails","axios","post","response","serverResponse","data","userToken","defaults","headers","common","token","setItem","userType","history","alert","error","onSubmit","placeholder","onChange","name","required","GenericAlert","handleClose","styleType","content","handleConfirmYes","handleConfirmNo","VacationCard","toggleFollow","isToggleChecked","checked","vacationId","followVacation","unfollowVacation","delete","onDeleteVacation","openAlert","deleteVacationFromServer","onEdit","closeAlert","isOpenAlert","date","dateString","day","getDate","month","getMonth","getFullYear","show","isAdminCard","formatDateToString","Customer","establishSocketConnection","io","query","connect","on","getAllVacations","get","sort","b","map","User","firstName","lastName","Register","args","setFirstName","setLastName","register","user","status","isInvalidUserName","alertType","alertContent","Admin","addIcon","chartIcon","VacationsReports","getFollowingStats","labels","randomColorPlugin","beforeUpdate","chart","backgroundColor","borderColor","i","config","datasets","length","color","Math","floor","random","backIcon","plugins","label","borderWidth","options","title","display","text","fontSize","scales","yAxes","scaleLabel","labelString","ticks","beginAtZero","xAxes","legend","tooltips","titleFontColor","bodyFontStyle","bodyFontSize","displayColors","callbacks","tooltipItem","xLabel","datasetIndex","labelTextColor","backgroundColors","Array","setDestination","setDescription","setImageUrl","setPrice","setStartDate","setEndDate","onSaveVacation","put","clearFields","console","onCancel","maxLength","min","toISOString","split","Layout","path","component","exact","from","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.48c0e849.chunk.js","sourcesContent":["export enum ActionType {\r\n    Login,\r\n    Logout,\r\n    GetAllVacations,\r\n    UpdateVacations,\r\n    ManageVacation,\r\n    DeleteVacation,\r\n    AddVacation,\r\n    EditVacation,\r\n    SetSocket\r\n}","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export class Vacation {\r\n    public constructor(\r\n        public id: number,\r\n        public destination: string,\r\n        public description: string,\r\n        public imageUrl: string,\r\n        public startDate: Date,\r\n        public endDate: Date,\r\n        public price: number,\r\n        public numOfFollowers: number = 0,\r\n        public isFollowing: boolean = false\r\n    ) { }\r\n}","import { createStore } from \"redux\";\r\nimport { reduce } from \"./reducer\";\r\nimport { AppState } from \"./app-state\";\r\n\r\nexport const store = createStore(reduce, new AppState());\r\n\r\n","import { AppState } from \"./app-state\";\r\nimport { ActionType } from \"./action-type\";\r\nimport { Action } from \"./action\";\r\n\r\n// This function is NOT called direcrtly by you\r\nexport function reduce(oldAppState: AppState, action: Action): AppState {\r\n    // Cloning the oldState (creating a copy)\r\n    const newAppState = { ...oldAppState };\r\n\r\n    switch (action.type) {\r\n        case ActionType.Login:\r\n            newAppState.isLoggedIn = true;\r\n            newAppState.userName = action.payload;\r\n            break;\r\n        case ActionType.Logout:\r\n            newAppState.isLoggedIn = false;\r\n            newAppState.userName = \"\";\r\n            break;\r\n        case ActionType.GetAllVacations:\r\n            newAppState.vacations = action.payload;\r\n            break;\r\n        case ActionType.UpdateVacations:\r\n            newAppState.vacations = action.payload;\r\n            break;\r\n        case ActionType.ManageVacation:\r\n            newAppState.vacationDetails = action.payload;\r\n            break;\r\n        case ActionType.DeleteVacation:\r\n            newAppState.vacations = newAppState.vacations.filter(vacation => {\r\n                return vacation.id !== action.payload;\r\n            });\r\n            break;\r\n        case ActionType.AddVacation:\r\n            newAppState.vacations.push(action.payload);\r\n            break;\r\n        case ActionType.EditVacation:\r\n            let vacationToEdit = action.payload;\r\n            newAppState.vacations.forEach((vacation, index) => {\r\n                if (vacation.id === vacationToEdit.id) {\r\n                    vacationToEdit.isFollowing = vacation.isFollowing;\r\n                    vacationToEdit.numOfFollowers = vacation.numOfFollowers;\r\n                    newAppState.vacations.splice(index, 1, vacationToEdit);\r\n                }\r\n            })\r\n            break;\r\n        case ActionType.SetSocket:\r\n            newAppState.socket = action.payload;\r\n            break;\r\n    }\r\n\r\n    // After returning the new state, it's being published to all subscribers\r\n    // Each component will render itself based on the new state\r\n    return newAppState;\r\n}","import { Vacation } from \"../models/Vacation\";\r\n\r\nexport class AppState {\r\n    public isLoggedIn: boolean = false;\r\n    public userName: string = \"\";\r\n    public vacations: Vacation[] = [];\r\n    public vacationDetails: Vacation = new Vacation(null, \"\", \"\", \"\", new Date(), new Date(), 1);\r\n    public socket: any;\r\n}","export default __webpack_public_path__ + \"static/media/observacation.47bf7e90.png\";","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Unsubscribe } from \"redux\";\r\nimport { ActionType } from \"../../redux/action-type\";\r\nimport { store } from \"../../redux/store\";\r\nimport \"./header.css\";\r\nimport logo from \"../../resources/observacation.png\";\r\n\r\ninterface HeaderState {\r\n    isLoggedIn: boolean;\r\n}\r\n\r\nexport default class Header extends Component<any, HeaderState>{\r\n\r\n    private unsubscribeStore: Unsubscribe;\r\n\r\n    public constructor(props: any) {\r\n        super(props);\r\n        this.state = { isLoggedIn: false };\r\n        this.unsubscribeStore = store.subscribe(\r\n            () => this.setState(\r\n                { isLoggedIn: store.getState().isLoggedIn }\r\n            ));\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.unsubscribeStore();\r\n    }\r\n\r\n    private onLogout = () => {\r\n        const socket = store.getState().socket;\r\n        if (socket) {\r\n            socket.disconnect();\r\n        }\r\n        sessionStorage.clear();\r\n        store.dispatch({ type: ActionType.Logout });\r\n    }\r\n\r\n    public render() {\r\n        return (\r\n            <div className=\"header\">\r\n                {sessionStorage.getItem(\"userToken\") && <div>\r\n                    <h5>Hello, {sessionStorage.getItem(\"userName\")} </h5>\r\n                    <Link to=\"/home\" onClick={this.onLogout}>logout</Link>\r\n                </div>}\r\n\r\n                <img src={logo} alt=\"logo\" />\r\n            </div>\r\n        );\r\n    }\r\n}","export class UserLoginDetails {\r\n    public constructor(\r\n        public userName?: string,\r\n        public password?: string,\r\n    ) { }\r\n}","import axios from \"axios\";\r\nimport React, { ChangeEvent, Component, FormEvent } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { SuccessfulLoginServerResponse } from \"../../models/SuccessfulLoginServerResponse\";\r\nimport { UserLoginDetails } from \"../../models/UserLoginDetails\";\r\n\r\ninterface LoginState {\r\n    userName: string;\r\n    password: string;\r\n}\r\n\r\nexport default class Login extends Component<any, LoginState>{\r\n\r\n    public constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            userName: \"\",\r\n            password: \"\"\r\n        }\r\n    }\r\n\r\n    private setUserName = (event: ChangeEvent<HTMLInputElement>) => {\r\n        const userName = event.target.value;\r\n        this.setState({ userName });\r\n    }\r\n\r\n    private setPassword = (event: ChangeEvent<HTMLInputElement>) => {\r\n        const password = event.target.value;\r\n        this.setState({ password });\r\n    }\r\n\r\n    public componentDidMount() {\r\n        const token = sessionStorage.getItem(\"userToken\");\r\n        const userType = sessionStorage.getItem(\"userType\");\r\n\r\n        // Authenticate user\r\n        if (token) {\r\n            if (userType === \"CUSTOMER\") {\r\n                this.props.history.push(\"/customer\");\r\n            }\r\n            else {\r\n                this.props.history.push(\"/admin\");\r\n            }\r\n        }\r\n    }\r\n\r\n    private login = async (event: FormEvent<HTMLFormElement>) => {\r\n        event.preventDefault();\r\n        try {\r\n            let userLoginDetails = new UserLoginDetails(this.state.userName, this.state.password);\r\n            const response = await axios.post<SuccessfulLoginServerResponse>\r\n                (\"http://34.65.206.19:3001/users/login\", userLoginDetails);\r\n            const serverResponse = response.data;\r\n\r\n            const userToken = axios.defaults.headers.common['authorization'] = serverResponse.token;\r\n            sessionStorage.setItem(\"userToken\", userToken);\r\n            sessionStorage.setItem(\"userName\", userLoginDetails.userName);\r\n\r\n            if (serverResponse.userType === \"ADMIN\") {\r\n                sessionStorage.setItem(\"userType\", \"ADMIN\");\r\n                this.props.history.push('/admin');\r\n            }\r\n            else if (serverResponse.userType === \"CUSTOMER\") {\r\n                sessionStorage.setItem(\"userType\", \"CUSTOMER\");\r\n                this.props.history.push('/customer');\r\n            }\r\n        }\r\n        catch (error) {\r\n            alert(error.response.data.error);\r\n        }\r\n    }\r\n\r\n    public render() {\r\n        return (\r\n            <div className=\"login\">\r\n                <form onSubmit={this.login}>\r\n\r\n                    <div className=\"form-input-group\">\r\n                        <div className=\"icon form-icon\">\r\n                            <i className=\"fas fa-user\" />\r\n                        </div>\r\n                        <div>\r\n                            <input type=\"text\" className=\"form-input\" placeholder=\" \"\r\n                                value={this.state.userName} onChange={this.setUserName}\r\n                                name=\"username\" required />\r\n                            <label className=\"form-label\">Username</label>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-input-group\">\r\n                        <div className=\"icon form-icon\">\r\n                            <i className=\"fas fa-lock\" />\r\n                        </div>\r\n                        <div>\r\n                            <input type=\"password\" className=\"form-input\" placeholder=\" \"\r\n                                value={this.state.password} onChange={this.setPassword}\r\n                                name=\"password\" required />\r\n                            <label className=\"form-label\">Password</label>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <input type=\"submit\" className=\"btn\" value=\"login\" />\r\n                    <Link to=\"/register\" className=\"link\">Not a member yet?</Link>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport \"./generic-alert.css\";\r\n\r\ninterface GenericAlertProps {\r\n    show: boolean;\r\n    content: string;\r\n    handleClose: any;\r\n    styleType: string;\r\n    handleConfirmYes?: any;\r\n    handleConfirmNo?: any;\r\n}\r\n\r\nexport default class GenericAlert extends Component <GenericAlertProps>{\r\n\r\n    public constructor(props: GenericAlertProps){\r\n        super(props);\r\n    }\r\n\r\n    public render() {\r\n        return (\r\n            <div className=\"modal\">\r\n                <div className=\"modal-content\">\r\n                    <button className=\"close\" onClick={this.props.handleClose}>&times;</button>\r\n\r\n                    <div className=\"icon-box\">\r\n                        {this.props.styleType === 'success' && \r\n                        <i className=\"far fa-check-circle\"/>}\r\n\r\n                        {this.props.styleType === 'error' && \r\n                        <i className=\"far fa-exclamation-circle\"/>}\r\n\r\n                        {this.props.styleType === 'confirm' && \r\n                        <i className=\"far fa-question-circle\"/>}\r\n                    </div>\r\n\r\n                    <p>{this.props.content}</p>\r\n\r\n                    {this.props.styleType === 'confirm' && <div className=\"confirm\">\r\n                        <button className=\"btn yes\" onClick={this.props.handleConfirmYes}>YES</button>\r\n                        <button className=\"btn no\" onClick={this.props.handleConfirmNo}>NO</button>\r\n                    </div>}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { ChangeEvent, Component } from \"react\";\r\nimport { Vacation } from \"../../models/Vacation\";\r\nimport { ActionType } from \"../../redux/action-type\";\r\nimport { store } from \"../../redux/store\";\r\nimport \"./vacation-card.css\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport GenericAlert from \"../generic-alert/generic-alert\";\r\n\r\ninterface VacationCardProps {\r\n    vacation: Vacation;\r\n    isAdminCard: boolean;\r\n}\r\n\r\ninterface VacationCardState {\r\n    isOpenAlert: boolean;\r\n}\r\n\r\nexport default class VacationCard extends Component<VacationCardProps, VacationCardState>{\r\n\r\n    public constructor(props: VacationCardProps) {\r\n        super(props);\r\n        this.state = { isOpenAlert: false }\r\n    }\r\n\r\n    private toggleFollow = (event: ChangeEvent<HTMLInputElement>) => {\r\n        const isToggleChecked = event.target.checked;\r\n        const vacationId = this.props.vacation.id;\r\n\r\n        if (isToggleChecked) {\r\n            this.followVacation(vacationId);\r\n        }\r\n        else {\r\n            this.unfollowVacation(vacationId);\r\n        }\r\n\r\n        let vacations = [...store.getState().vacations];\r\n        vacations.forEach(vacation => {\r\n            if (vacation.id === vacationId) {\r\n                vacation.isFollowing = isToggleChecked;\r\n                vacation.numOfFollowers += isToggleChecked ? 1 : -1;\r\n                return;\r\n            }\r\n        });\r\n\r\n        store.dispatch({ type: ActionType.UpdateVacations, payload: vacations });\r\n    }\r\n\r\n    private followVacation = async (vacationId: number) => {\r\n        try {\r\n            await axios.post(\"http://34.65.206.19:3001/vacations/followed_vacations/\", { vacationId });\r\n        }\r\n        catch (error) {\r\n            alert(error.response.data.error);\r\n        }\r\n    }\r\n\r\n    private unfollowVacation = async (vacationId: number) => {\r\n        try {\r\n            await axios.delete(`http://34.65.206.19:3001/vacations/followed_vacations/${vacationId}`);\r\n        }\r\n        catch (error) {\r\n            alert(error.response.data.error);\r\n        }\r\n    }\r\n\r\n    private onDeleteVacation = () => {\r\n        this.openAlert();\r\n    }\r\n\r\n    private deleteVacationFromServer = async () => {\r\n        try {\r\n            let vacationId = this.props.vacation.id;\r\n            await axios.delete(`http://34.65.206.19:3001/vacations/${vacationId}`);\r\n            store.dispatch({ type: ActionType.DeleteVacation, payload: vacationId });\r\n        }\r\n        catch (error) {\r\n            alert(error.response.data.error);\r\n        }\r\n    }\r\n\r\n    private onEdit = () => {\r\n        store.dispatch({ type: ActionType.ManageVacation, payload: this.props.vacation });\r\n    }\r\n\r\n    private formatDateToString(date: Date): string {\r\n        let dateString = \"\";\r\n        date = new Date(date);\r\n        let day = date.getDate();\r\n        let month = date.getMonth() + 1;\r\n        let year = date.getFullYear();\r\n\r\n        if (day < 10) {\r\n            dateString += '0';\r\n        }\r\n        dateString += day + '/';\r\n        if (month < 10) {\r\n            dateString += '0';\r\n        }\r\n        dateString += month + '/';\r\n        dateString += year;\r\n        return dateString;\r\n    }\r\n\r\n    private closeAlert = () => {\r\n        this.setState({ isOpenAlert: false });\r\n    }\r\n\r\n    private openAlert = () => {\r\n        this.setState({ isOpenAlert: true });\r\n    }\r\n\r\n    public render() {\r\n        return (\r\n            <div className=\"vacation-card\">\r\n\r\n                {this.state.isOpenAlert && <GenericAlert show={this.state.isOpenAlert}\r\n                    handleClose={this.closeAlert} content={\"Are you sure you want to delete this vacation?\"}\r\n                    styleType=\"confirm\" handleConfirmYes={this.deleteVacationFromServer}\r\n                    handleConfirmNo={this.closeAlert} />}\r\n\r\n                <div className=\"top-card-section\">\r\n                    {this.props.isAdminCard && <button className=\"delete-button\"\r\n                        onClick={this.onDeleteVacation}>\r\n                        <i className=\"fas fa-times\"></i>\r\n                    </button>}\r\n\r\n                    <div className=\"cover\">\r\n                        <img src={this.props.vacation.imageUrl} alt=\"\" />\r\n                    </div>\r\n                    <div className=\"followers-label\">\r\n                        {this.props.vacation.numOfFollowers} Followers\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"bottom-card-section\">\r\n                    <div className=\"circle\">\r\n\r\n                        {!this.props.isAdminCard && <label className=\"follow-checkbox\">\r\n                            <input type=\"checkbox\" checked={this.props.vacation.isFollowing}\r\n                                onChange={this.toggleFollow} />\r\n                            <i className=\"far fa-heart unchecked\"></i>\r\n                            <i className=\"fas fa-heart checked\"></i>\r\n                        </label>}\r\n\r\n                        {this.props.isAdminCard && <Link to=\"/manage_vacation\">\r\n                            <button className=\"edit-button\" onClick={this.onEdit}>\r\n                                <i className=\"fas fa-pencil-alt\"></i>\r\n                            </button>\r\n                        </Link>}\r\n\r\n                    </div>\r\n\r\n                    <h2>{this.props.vacation.destination}</h2>\r\n                    <h4>{this.formatDateToString(this.props.vacation.startDate)} -\r\n                    {this.formatDateToString(this.props.vacation.endDate)}</h4>\r\n\r\n                    <div className=\"description\">\r\n                        <p>{this.props.vacation.description}</p>\r\n                    </div>\r\n\r\n                    <div className=\"price\">\r\n                        <h3>{this.props.vacation.price}$</h3>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport axios from \"axios\";\r\nimport { Unsubscribe } from \"redux\";\r\nimport { store } from '../../redux/store';\r\nimport { ActionType } from '../../redux/action-type';\r\nimport { Vacation } from '../../models/Vacation';\r\nimport { io } from 'socket.io-client';\r\nimport VacationCard from '../vacation-card/vacation-card';\r\n\r\ninterface CustomerState {\r\n    vacations: Vacation[];\r\n}\r\n\r\nexport default class Customer extends Component<any, CustomerState> {\r\n\r\n    private unsubscribeStore: Unsubscribe;\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = { vacations: [] };\r\n\r\n        // Update state vacations with the most updated version from store\r\n        this.unsubscribeStore = store.subscribe(\r\n            () => this.setState(\r\n                {\r\n                    vacations: store.getState().vacations\r\n                }\r\n            )\r\n        );\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.unsubscribeStore();\r\n    }\r\n\r\n    public componentDidMount() {\r\n        const token = sessionStorage.getItem(\"userToken\");\r\n        const userType = sessionStorage.getItem(\"userType\");\r\n\r\n        // Authenticate user\r\n        if (!token) {\r\n            this.props.history.push(\"/home\");\r\n            return;\r\n        }\r\n        if (userType === 'ADMIN') {\r\n            this.props.history.push(\"/admin\");\r\n            return;\r\n        }\r\n\r\n        this.establishSocketConnection(token);\r\n        this.getAllVacations(token);\r\n    }\r\n\r\n    private establishSocketConnection = (token: string) => {\r\n        const socket = io('http://34.65.206.19:3002/', { query: \"token=\" + token }).connect();\r\n\r\n        // Save socket for later disconnection\r\n        store.dispatch({ type: ActionType.SetSocket, payload: socket });\r\n\r\n        // Handle socket server requests\r\n        socket.on(\"DELETE_VACATION\", (vacationId: number) => {\r\n            store.dispatch({ type: ActionType.DeleteVacation, payload: +vacationId });\r\n        })\r\n        socket.on(\"ADD_VACATION\", (vacation: Vacation) => {\r\n            store.dispatch({ type: ActionType.AddVacation, payload: vacation });\r\n        })\r\n        socket.on(\"EDIT_VACATION\", (vacationToEdit: Vacation) => {\r\n            store.dispatch({ type: ActionType.EditVacation, payload: vacationToEdit });\r\n        })\r\n    }\r\n\r\n    private getAllVacations = async (token: string) => {\r\n        axios.defaults.headers.common['authorization'] = token;\r\n        try {\r\n            const response = await axios.get<Vacation[]>(\"http://34.65.206.19:3001/vacations/\");\r\n            store.dispatch({ type: ActionType.GetAllVacations, payload: response.data });\r\n        }\r\n        catch (error) {\r\n            alert(error.response.data.error);\r\n        }\r\n    }\r\n\r\n    public render() {\r\n        return (\r\n            <div className=\"customer\">\r\n                <div className=\"vacations-cards-container\">\r\n                    {this.state.vacations.sort((a, b) =>\r\n                        a.isFollowing === b.isFollowing ? 0 : a.isFollowing ? -1 : 1\r\n                    ).map(vacation =>\r\n                        <VacationCard isAdminCard={false} vacation={vacation} key={vacation.id} />\r\n                    )}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","export class User {\r\n    public constructor(\r\n        public userName: string,\r\n        public password: string,\r\n        public type: string,\r\n        public firstName?: string,\r\n        public lastName?: string,\r\n        public id?: number\r\n    ) { }\r\n}","import axios from \"axios\";\r\nimport React, { ChangeEvent, Component, FormEvent } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { User } from \"../../models/User\";\r\nimport GenericAlert from \"../generic-alert/generic-alert\";\r\nimport \"./register.css\";\r\n\r\ninterface RegisterState {\r\n    userName: string;\r\n    password: string;\r\n    firstName: string;\r\n    lastName: string;\r\n    isInvalidUserName: boolean;\r\n    isOpenAlert: boolean;\r\n    alertType: string;\r\n    alertContent: string;\r\n}\r\n\r\nexport default class Register extends Component<any, RegisterState>{\r\n\r\n    public constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            userName: \"\",\r\n            password: \"\",\r\n            firstName: \"\",\r\n            lastName: \"\",\r\n            isInvalidUserName: false,\r\n            isOpenAlert: false,\r\n            alertType: \"\",\r\n            alertContent: \"\"\r\n        }\r\n    }\r\n\r\n    private setUserName = (args: ChangeEvent<HTMLInputElement>) => {\r\n        const userName = args.target.value;\r\n        this.setState({ userName });\r\n    }\r\n\r\n    private setPassword = (args: ChangeEvent<HTMLInputElement>) => {\r\n        const password = args.target.value;\r\n        this.setState({ password });\r\n    }\r\n\r\n    private setFirstName = (args: ChangeEvent<HTMLInputElement>) => {\r\n        const firstName = args.target.value;\r\n        this.setState({ firstName });\r\n    }\r\n\r\n    private setLastName = (args: ChangeEvent<HTMLInputElement>) => {\r\n        const lastName = args.target.value;\r\n        this.setState({ lastName });\r\n    }\r\n\r\n    public componentDidMount() {\r\n        const token = sessionStorage.getItem(\"userToken\");\r\n        const userType = sessionStorage.getItem(\"userType\");\r\n\r\n        // Authenticate user\r\n        if (token) {\r\n            if (userType === \"CUSTOMER\") {\r\n                this.props.history.push(\"/customer\");\r\n            }\r\n            else {\r\n                this.props.history.push(\"/admin\");\r\n            }\r\n        }\r\n    }\r\n\r\n    private register = async (event: FormEvent<HTMLFormElement>) => {\r\n        event.preventDefault();\r\n        try {\r\n            let user = new User(this.state.userName, this.state.password,\r\n                'CUSTOMER', this.state.firstName, this.state.lastName);\r\n\r\n            await axios.post(\"http://34.65.206.19:3001/users/\", user);\r\n            this.openAlert(\"success\", \"Registration complete! You can login now\");\r\n        }\r\n        catch (err) {\r\n            if (err.response.status === 601) {\r\n                this.setState({ isInvalidUserName: true });\r\n            }\r\n            this.openAlert(\"error\", err.response.data.error);\r\n        }\r\n    }\r\n\r\n    private closeAlert = () => {\r\n        this.setState({ isOpenAlert: false });\r\n        if(this.state.alertType == \"success\") {\r\n            this.props.history.push('/');\r\n        }\r\n    }\r\n\r\n    private openAlert = (alertType: string, alertContent: string) => {\r\n        this.setState({ isOpenAlert: true, alertType, alertContent });\r\n    }\r\n\r\n    public render() {\r\n        return (\r\n            <div className=\"register\">\r\n\r\n                {this.state.isOpenAlert && <GenericAlert show={this.state.isOpenAlert}\r\n                    handleClose={this.closeAlert} content={this.state.alertContent}\r\n                    styleType={this.state.alertType} />}\r\n\r\n                <form onSubmit={this.register}>\r\n\r\n                    <div className=\"form-input-group\">\r\n                        <div>\r\n                            <input id=\"username\" type=\"text\" className=\"form-input\"\r\n                                placeholder=\" \" name=\"username\"\r\n                                value={this.state.userName} onChange={this.setUserName}\r\n                                required />\r\n                            <label className=\"form-label\">Username</label>\r\n                            {this.state.isInvalidUserName && <div className=\"icon error-icon\">\r\n                                <i className=\"fas fa-exclamation-circle\">\r\n                                    <small> User name already exists</small></i>\r\n                            </div>}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-input-group\">\r\n                        <div>\r\n                            <input type=\"password\" className=\"form-input\" placeholder=\" \"\r\n                                name=\"password\" value={this.state.password}\r\n                                onChange={this.setPassword} required />\r\n                            <label className=\"form-label\">Password</label>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-input-group\">\r\n                        <div>\r\n                            <input type=\"text\" className=\"form-input\" placeholder=\" \"\r\n                                name=\"firstName\" value={this.state.firstName}\r\n                                onChange={this.setFirstName} required />\r\n                            <label className=\"form-label\">FirstName</label>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-input-group\">\r\n                        <div>\r\n                            <input type=\"text\" className=\"form-input\" placeholder=\" \"\r\n                                name=\"lastName\" value={this.state.lastName}\r\n                                onChange={this.setLastName} required />\r\n                            <label className=\"form-label\">LastName</label>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <input type=\"submit\" className=\"btn\" value=\"register\" />\r\n                    <Link to=\"/home\" className=\"link\">Already a member?</Link>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}","export default __webpack_public_path__ + \"static/media/bar-chart.1608c6bc.svg\";","export default __webpack_public_path__ + \"static/media/add.08ff7156.svg\";","import React, { Component } from 'react';\r\nimport axios from \"axios\";\r\nimport { Unsubscribe } from \"redux\";\r\nimport { store } from '../../redux/store';\r\nimport { ActionType } from '../../redux/action-type';\r\nimport { Vacation } from '../../models/Vacation';\r\nimport VacationCard from '../vacation-card/vacation-card';\r\nimport { Link } from 'react-router-dom';\r\nimport { io } from 'socket.io-client';\r\nimport chartIcon from \"../../resources/bar-chart.svg\";\r\nimport addIcon from \"../../resources/add.svg\"\r\n\r\ninterface AdminState {\r\n    vacations: Vacation[];\r\n}\r\n\r\nexport default class Admin extends Component<any, AdminState> {\r\n\r\n    private unsubscribeStore: Unsubscribe;\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = { vacations: [] };\r\n\r\n        // Update state vacations with the most updated version from store\r\n        this.unsubscribeStore = store.subscribe(\r\n            () => this.setState({ vacations: store.getState().vacations })\r\n        );\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.unsubscribeStore();\r\n    }\r\n\r\n    public async componentDidMount() {\r\n        const token = sessionStorage.getItem(\"userToken\");\r\n        const userType = sessionStorage.getItem(\"userType\");\r\n\r\n        // Authenticate user\r\n        if (!token) {\r\n            this.props.history.push(\"/home\");\r\n            return;\r\n        }\r\n        if (userType === 'CUSTOMER') {\r\n            this.props.history.push(\"/customer\");\r\n            return;\r\n        }\r\n\r\n        this.establishSocketConnection(token);\r\n        this.getAllVacations(token);\r\n    }\r\n\r\n    private establishSocketConnection = (token: string) => {\r\n        const socket = io('http://34.65.206.19:3002/', { query: \"token=\" + token }).connect();\r\n\r\n        // Save socket for later disconnection\r\n        store.dispatch({ type: ActionType.SetSocket, payload: socket });\r\n    }\r\n\r\n    private getAllVacations = async (token: string) => {\r\n        axios.defaults.headers.common['authorization'] = token;\r\n        try {\r\n            const response = await axios.get<Vacation[]>(\"http://34.65.206.19:3001/vacations/\");\r\n            store.dispatch({ type: ActionType.GetAllVacations, payload: response.data });\r\n        }\r\n        catch (error) {\r\n            alert(error.response.data.error);\r\n        }\r\n    }\r\n\r\n    public render() {\r\n        return (\r\n            <div className=\"admin\">\r\n\r\n                <div className=\"menu\">\r\n                    <Link to=\"/manage_vacation\">\r\n                        <img className=\"icon-img\" src={addIcon} alt=\"chart\" />Add Vacation\r\n                    </Link>\r\n\r\n                    <Link to=\"/reports\" >\r\n                        <img className=\"icon-img\" src={chartIcon} alt=\"chart\" />Reports\r\n                    </Link>\r\n                </div>\r\n\r\n                <div className=\"vacations-cards-container\">\r\n                    {this.state.vacations.map(vacation =>\r\n                        <VacationCard isAdminCard={true} vacation={vacation}\r\n                            key={vacation.id} />\r\n                    )}\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}","export default __webpack_public_path__ + \"static/media/beach.1f8a236c.svg\";","import axios from \"axios\";\r\nimport React, { Component } from \"react\";\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { VacationStats } from \"../../models/VacationStats\";\r\nimport \"./vacations-reports.css\";\r\nimport backIcon from \"../../resources/beach.svg\";\r\n\r\ninterface VacationsReportsState {\r\n    labels: string[];\r\n    data: number[];\r\n}\r\n\r\nexport default class VacationsReports extends Component<any, VacationsReportsState>{\r\n\r\n    public constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            labels: [],\r\n            data: []\r\n        }\r\n    }\r\n\r\n    public async componentDidMount() {\r\n        const token = sessionStorage.getItem(\"userToken\");\r\n        const userType = sessionStorage.getItem(\"userType\");\r\n\r\n        // Authenticate user\r\n        if (!token) {\r\n            this.props.history.push(\"/home\");\r\n            return;\r\n        }\r\n        if (userType === 'CUSTOMER') {\r\n            this.props.history.push(\"/customer\");\r\n            return;\r\n        }\r\n\r\n        this.getFollowingStats(token);\r\n    }\r\n\r\n    private getFollowingStats = async (token: string) => {\r\n        axios.defaults.headers.common['authorization'] = token;\r\n        try {\r\n            const response = await axios.get<VacationStats[]>(\r\n                \"http://34.65.206.19:3001/vacations/followed_vacations/\");\r\n            const labels = response.data.map(a => \"Vacation \" + a.vacationId);\r\n            const data = response.data.map(a => a.numOfFollowers);\r\n            this.setState({ labels, data });\r\n        }\r\n        catch (error) {\r\n            alert(error.response.data.error);\r\n        }\r\n    }\r\n\r\n    private randomColorPlugin = {\r\n        beforeUpdate: function (chart: Chart) {\r\n\r\n            var backgroundColor = [];\r\n            var borderColor = [];\r\n\r\n            // For every data we have ...\r\n            for (var i = 0; i < chart.config.data.datasets[0].data.length; i++) {\r\n\r\n                // Generate a random color\r\n                var color = \"rgba(\" + Math.floor(Math.random() * 255) + \",\" +\r\n                    Math.floor(Math.random() * 255) + \",\" +\r\n                    Math.floor(Math.random() * 255) + \",\";\r\n\r\n                // Push this new color to both background and border color arrays\r\n                backgroundColor.push(color + \"0.6)\");\r\n                borderColor.push(color + \"1)\");\r\n            }\r\n\r\n            // Update the chart bars color properties\r\n            chart.config.data.datasets[0].backgroundColor = backgroundColor;\r\n            chart.config.data.datasets[0].borderColor = borderColor;\r\n\r\n        }\r\n    };\r\n\r\n    public render() {\r\n        return (\r\n            <div className=\"reports-chart\">\r\n\r\n                <div className=\"menu\">\r\n                    <Link to=\"/admin\" >\r\n                        <img className=\"icon-img\" src={backIcon} alt=\"chart\" />Back Home\r\n                    </Link>\r\n                </div>\r\n\r\n                <Bar plugins={[this.randomColorPlugin]}\r\n                    data={{\r\n                        labels: this.state.labels,\r\n                        datasets: [\r\n                            {\r\n                                label: 'Followers',\r\n                                data: this.state.data,\r\n                                backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56'],\r\n                                borderWidth: 2\r\n                            }\r\n                        ]\r\n                    }}\r\n                    options={{\r\n                        title: {\r\n                            display: true,\r\n                            text: 'Vacations Followers',\r\n                            fontSize: 20\r\n                        },\r\n                        scales: {\r\n                            yAxes: [{\r\n                                scaleLabel: {\r\n                                    display: true,\r\n                                    labelString: 'Number of Followers'\r\n                                },\r\n                                ticks: {\r\n                                    beginAtZero: true\r\n                                }\r\n                            }],\r\n                            xAxes: [{\r\n                                scaleLabel: {\r\n                                    display: true,\r\n                                    labelString: 'Vacation Identifier'\r\n                                }\r\n                            }]\r\n                        },\r\n                        legend: {\r\n                            display: false\r\n                        },\r\n                        tooltips: {\r\n                            backgroundColor: 'rgb(255, 255, 255)',\r\n                            titleFontColor: 'rgb(0, 0, 0)',\r\n                            bodyFontStyle: 'bold',\r\n                            bodyFontSize: 14,\r\n                            displayColors: false,\r\n                            callbacks: {\r\n                                title: function (tooltipItem, data) {\r\n                                    if (tooltipItem.length > 0) {\r\n                                        return \"Vacation \" + tooltipItem[0].xLabel + \": \";\r\n                                    }\r\n                                    return \"\";\r\n                                },\r\n                                label: function (tooltipItem, data) {\r\n                                    if (data.datasets.length > 0) {\r\n                                        return tooltipItem.value + \" \" +\r\n                                            data.datasets[tooltipItem.datasetIndex].label;\r\n                                    }\r\n                                    return \"\";\r\n                                },\r\n                                labelTextColor: function (tooltipItem, chart) {\r\n                                    let index = tooltipItem.index;\r\n                                    let backgroundColors = new Array();\r\n                                    backgroundColors.push(chart.data.datasets[0].backgroundColor);\r\n                                    return backgroundColors[0][index];\r\n                                }\r\n                            }\r\n                        }\r\n                    }}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}","import axios from \"axios\";\r\nimport React, { ChangeEvent, Component, FormEvent } from \"react\";\r\nimport { Vacation } from \"../../models/Vacation\";\r\nimport { ActionType } from \"../../redux/action-type\";\r\nimport { store } from \"../../redux/store\";\r\nimport GenericAlert from \"../generic-alert/generic-alert\";\r\nimport \"./manage-vacation.css\";\r\n\r\ninterface ManageVacationState {\r\n    id: number;\r\n    destination: string;\r\n    description: string;\r\n    imageUrl: string;\r\n    price: number;\r\n    startDate: Date;\r\n    endDate: Date;\r\n    isOpenAlert: boolean;\r\n    alertType: string;\r\n    alertContent: string;\r\n}\r\n\r\nexport default class ManageVacation extends Component<any, ManageVacationState>{\r\n\r\n    public constructor(props: any) {\r\n        super(props);\r\n\r\n        let vacation = store.getState().vacationDetails;\r\n\r\n        this.state = {\r\n            id: vacation.id,\r\n            destination: vacation.destination,\r\n            description: vacation.description,\r\n            imageUrl: vacation.imageUrl,\r\n            price: vacation.price,\r\n            startDate: new Date(vacation.startDate),\r\n            endDate: new Date(vacation.endDate),\r\n            isOpenAlert: false,\r\n            alertContent: \"\",\r\n            alertType: \"\"\r\n        }\r\n    }\r\n\r\n    public componentDidMount() {\r\n        const token = sessionStorage.getItem(\"userToken\");\r\n        const userType = sessionStorage.getItem(\"userType\");\r\n\r\n        // If the user isn't logged in, go back to login screen\r\n        if (!token) {\r\n            this.props.history.push(\"/home\");\r\n            return;\r\n        }\r\n        if (userType === 'CUSTOMER') {\r\n            this.props.history.push(\"/customer\");\r\n            return;\r\n        }\r\n        if (store.getState().vacations.length === 0) {\r\n            this.props.history.push(\"/admin\");\r\n            return;\r\n        }\r\n\r\n        axios.defaults.headers.common['authorization'] = sessionStorage.getItem(\"userToken\");\r\n    }\r\n\r\n    private setDestination = (event: ChangeEvent<HTMLInputElement>) => {\r\n        const destination = event.target.value;\r\n        this.setState({ destination });\r\n    }\r\n\r\n    private setDescription = (event: ChangeEvent<HTMLTextAreaElement>) => {\r\n        const description = event.target.value;\r\n        this.setState({ description });\r\n    }\r\n\r\n    private setImageUrl = (event: ChangeEvent<HTMLInputElement>) => {\r\n        const imageUrl = event.target.value;\r\n        this.setState({ imageUrl });\r\n    }\r\n\r\n    private setPrice = (event: ChangeEvent<HTMLInputElement>) => {\r\n        const price = +event.target.value;\r\n        this.setState({ price });\r\n    }\r\n\r\n    private setStartDate = (event: ChangeEvent<HTMLInputElement>) => {\r\n        const startDate = new Date(event.target.value);\r\n        this.setState({ startDate });\r\n    }\r\n\r\n    private setEndDate = (event: ChangeEvent<HTMLInputElement>) => {\r\n        const endDate = new Date(event.target.value);\r\n        this.setState({ endDate });\r\n    }\r\n\r\n    private onSaveVacation = async (event: FormEvent<HTMLFormElement>) => {\r\n        event.preventDefault();\r\n        try {\r\n            let vacation = new Vacation(this.state.id,\r\n                this.state.destination,\r\n                this.state.description,\r\n                this.state.imageUrl,\r\n                this.state.startDate,\r\n                this.state.endDate,\r\n                this.state.price);\r\n\r\n            // If the vacation already has an id - update it\r\n            if (vacation.id) {\r\n                await axios.put(\"http://34.65.206.19:3001/vacations/\", vacation);\r\n            }\r\n            // It's a new vacation - add it\r\n            else {\r\n                vacation.id = store.getState().vacations[store.getState().vacations.length - 1].id + 1;\r\n                await axios.post(\"http://34.65.206.19:3001/vacations/\", vacation);\r\n                store.dispatch({ type: ActionType.AddVacation, payload: vacation });\r\n            }\r\n\r\n            this.clearFields();\r\n            this.openAlert(\"success\", \"Successfully saved\");\r\n        }\r\n        catch (error) {\r\n            console.error(error);\r\n            this.openAlert(\"error\", error.response.data.error);\r\n        }\r\n    }\r\n\r\n    private clearFields = () => {\r\n        this.setState({\r\n            id: null,\r\n            destination: \"\",\r\n            description: \"\",\r\n            imageUrl: \"\",\r\n            price: 1,\r\n            startDate: new Date(),\r\n            endDate: new Date()\r\n        });\r\n    }\r\n\r\n    private onCancel = () => {\r\n        let vacation = new Vacation(null, \"\", \"\", \"\", new Date(), new Date(), 1);\r\n        store.dispatch({ type: ActionType.ManageVacation, payload: vacation });\r\n        this.props.history.push(\"/admin\");\r\n    }\r\n\r\n    private closeAlert = () => {\r\n        this.setState({ isOpenAlert: false });\r\n    }\r\n\r\n    private openAlert = (alertType: string, alertContent: string) => {\r\n        this.setState({ isOpenAlert: true, alertType, alertContent });\r\n    }\r\n\r\n    public render() {\r\n        return (\r\n            <div className=\"manage-vacation\">\r\n\r\n                {this.state.isOpenAlert && <GenericAlert show={this.state.isOpenAlert}\r\n                    handleClose={this.closeAlert} content={this.state.alertContent}\r\n                    styleType={this.state.alertType} />}\r\n\r\n                <form onSubmit={this.onSaveVacation}>\r\n                    <div className=\"form-input-group\">\r\n                        <div className=\"icon form-icon\">\r\n                            <i className=\"fas fa-map-pin\" />\r\n                        </div>\r\n                        <div>\r\n                            <input type=\"text\" className=\"form-input\" placeholder=\" \"\r\n                                name=\"destination\" required value={this.state.destination}\r\n                                onChange={this.setDestination} />\r\n                            <label className=\"form-label\">Destination</label>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-input-group\">\r\n                        <div className=\"icon form-icon\">\r\n                            <i className=\"fas fa-camera\" />\r\n                        </div>\r\n                        <div>\r\n                            <input type=\"text\" className=\"form-input\" placeholder=\" \"\r\n                                name=\"imageUrl\" maxLength={250} required\r\n                                value={this.state.imageUrl}\r\n                                onChange={this.setImageUrl} />\r\n                            <label className=\"form-label\">Image</label>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-input-group\">\r\n                        <div className=\"icon form-icon\">\r\n                            <i className=\"fas fa-dollar-sign\" />\r\n                        </div>\r\n                        <div>\r\n                            <input type=\"number\" className=\"form-input\" placeholder=\" \"\r\n                                name=\"price\" min=\"1\" required value={this.state.price}\r\n                                onChange={this.setPrice} />\r\n                            <label className=\"form-label\">Price</label>\r\n                            <div className=\"icon error-icon\" >\r\n                                <i className=\"fas fa-exclamation-circle\">\r\n                                    <small> must be greater than 0</small></i>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-input-group\">\r\n                        <div className=\"icon form-icon\">\r\n                            <i className=\"fas fa-calendar-alt\" />\r\n                        </div>\r\n                        <div>\r\n                            <input type=\"date\" className=\"form-input\" placeholder=\" \"\r\n                                min={new Date().toISOString().split('T')[0]}\r\n                                value={this.state.startDate.toISOString().split('T')[0]}\r\n                                name=\"startDate\" required\r\n                                onChange={this.setStartDate} />\r\n                            <label className=\"form-label\">Start Date</label>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-input-group\">\r\n                        <div className=\"icon form-icon\">\r\n                            <i className=\"fas fa-calendar-alt\" />\r\n                        </div>\r\n                        <div>\r\n                            <input type=\"date\" className=\"form-input\" placeholder=\" \"\r\n                                min={this.state.startDate.toISOString().split('T')[0]}\r\n                                value={this.state.endDate.toISOString().split('T')[0]}\r\n                                name=\"endDate\" required\r\n                                onChange={this.setEndDate} />\r\n                            <label className=\"form-label\">End Date</label>\r\n                            <div className=\"icon error-icon\">\r\n                                <i className=\"fas fa-exclamation-circle\">\r\n                                    <small> must be later than start date</small></i>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-input-group textarea-group\">\r\n                        <div className=\"icon form-icon\">\r\n                            <i className=\"fas fa-info\" />\r\n                        </div>\r\n                        <div className=\"form-textarea\">\r\n                            <textarea className=\"form-input\" placeholder=\" \"\r\n                                name=\"description\" maxLength={800} required\r\n                                value={this.state.description}\r\n                                onChange={this.setDescription} />\r\n                            <label className=\"form-label\">Description</label>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <input type=\"button\" className=\"btn cancel-btn\"\r\n                        value=\"Cancel\" onClick={this.onCancel} />\r\n                    <input type=\"submit\" className=\"btn\" value=\"Save\" />\r\n\r\n                </form>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport { BrowserRouter, Redirect, Route, Switch } from \"react-router-dom\";\r\nimport \"./layout.css\";\r\nimport Header from \"../header/header\";\r\nimport Login from \"../login/login\";\r\nimport Customer from \"../customer/customer\";\r\nimport Register from \"../register/register\";\r\nimport Admin from \"../admin/admin\";\r\nimport VacationsReports from \"../vacations-reports/vacations-reports\";\r\nimport ManageVacation from \"../manage-vacation.tsx/manage-vacation\";\r\n\r\nexport default class Layout extends Component {\r\n    public render() {\r\n        return (\r\n            <BrowserRouter>\r\n                <section className=\"layout\">\r\n                    <header>\r\n                        <Header />\r\n                    </header>\r\n\r\n                    <main>\r\n                        <Switch>\r\n                            <Route path=\"/home\" component={Login} exact />\r\n                            <Route path=\"/register\" component={Register} exact />\r\n                            <Route path=\"/customer\" component={Customer} exact />\r\n                            <Route path=\"/admin\" component={Admin} exact />\r\n                            <Route path=\"/manage_vacation\" component={ManageVacation} exact />\r\n                            <Route path=\"/reports\" component={VacationsReports} exact />\r\n                            <Redirect from=\"/\" to=\"/home\" exact />\r\n                        </Switch>\r\n                    </main>\r\n\r\n                </section>\r\n            </BrowserRouter>\r\n        );\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport Layout from './components/layout/layout';\n\nReactDOM.render(<Layout />,document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}